# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  teste:

volumes:
  orderer.teste.com.br:
  peer0.tdc.teste.com.br:
# peer1.tdc.teste.com.br:

services:
  
  orderer.teste.gov.br:
    container_name: orderer.teste.com.br
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - $PWD/system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - $PWD/organizations/ordererOrganizations/teste.com.br/orderers/orderer.teste.com.br/msp:/var/hyperledger/orderer/msp
        - $PWD/organizations/ordererOrganizations/teste.com.br/orderers/orderer.teste.com.br/tls/:/var/hyperledger/orderer/tls
        - orderer.teste.com.br:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - teste
   
  couchdbteste0:
    container_name: couchdbteste0
    image: couchdb:3.1.1
    labels:
      service: hyperledger-fabric
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    volumes:
      - /var/hyperledger/couchdbteste0:/opt/couchdb/data
    networks:
      - teste

  peer0.tdc.teste.com.br:
    container_name: peer0.tdc.teste.com.br
    image: hyperledger/fabric-peer:$IMAGE_TAG
    labels:
      service: hyperledger-fabric
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdbteste0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_teste
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.tdc.teste.com.br
      - CORE_PEER_ADDRESS=peer0.tdc.teste.com.br:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.tdc.teste.com.br:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.tdc.teste.com.br:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.tdc.teste.com.br:7051
      - CORE_PEER_LOCALMSPID=TDC
    depends_on:
      - couchdbteste0
    volumes:
      - /var/run/:/host/var/run/
      - ../organizations/peerOrganizations/tdc.teste.com.br/peers/peer0.tdc.teste.com.br/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/tdc.teste.com.br/peers/peer0.tdc.teste.com.br/tls:/etc/hyperledger/fabric/tls
      - peer0.tdc.teste.com.br:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7051:7051
    networks:
      - teste
   
  # couchdbteste1:
  #   container_name: couchdbteste0
  #   image: couchdb:3.1.1
  #   labels:
  #     service: hyperledger-fabric
  #   # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
  #   # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
  #   environment:
  #     - COUCHDB_USER=admin
  #     - COUCHDB_PASSWORD=adminpw
  #   # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
  #   # for example map it to utilize Fauxton User Interface in dev environments.
  #   ports:
  #     - "6984:6984"
  #   volumes:
  #     - /var/hyperledger/couchdbteste1:/opt/couchdb/data
  #   networks:
  #     - teste

  # peer1.tdc.teste.com.br:
  #   container_name: peer1.tdc.teste.com.br
  #   image: hyperledger/fabric-peer:$IMAGE_TAG
  #   labels:
  #     service: hyperledger-fabric
  #   environment:
  #     - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdbteste1:6984
  #     # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
  #     # provide the credentials for ledger to connect to CouchDB.  The username and password must
  #     # match the username and password set for the associated CouchDB.
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
  #     #Generic peer variables
  #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
  #     # the following setting starts chaincode containers on the same
  #     # bridge network as the peers
  #     # https://docs.docker.com/compose/networking/
  #     - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_teste
  #     - FABRIC_LOGGING_SPEC=INFO
  #     #- FABRIC_LOGGING_SPEC=DEBUG
  #     - CORE_PEER_TLS_ENABLED=true
  #     - CORE_PEER_PROFILE_ENABLED=true
  #     - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
  #     - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
  #     - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
  #     # Peer specific variabes
  #     - CORE_PEER_ID=peer1.tdc.teste.com.br
  #     - CORE_PEER_ADDRESS=peer1.tdc.teste.com.br:8051
  #     - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
  #     - CORE_PEER_CHAINCODEADDRESS=peer1.tdc.teste.com.br:8052
  #     - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
  #     - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.tdc.teste.com.br:7051
  #     - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.tdc.teste.com.br:7051
  #     - CORE_PEER_LOCALMSPID=TDC
  #   depends_on:
  #     - couchdbteste1
  #   volumes:
  #     - /var/run/:/host/var/run/
  #     - ../organizations/peerOrganizations/tdc.teste.com.br/peers/peer1.tdc.teste.com.br/msp:/etc/hyperledger/fabric/msp
  #     - ../organizations/peerOrganizations/tdc.teste.com.br/peers/peer1.tdc.teste.com.br/tls:/etc/hyperledger/fabric/tls
  #     - peer1.tdc.teste.com.br:/var/hyperledger/production
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  #   command: peer node start
  #   ports:
  #     - 8051:8051
  #   networks:
  #     - teste

  cli:
    container_name: cli-teste
    image: hyperledger/fabric-tools:$IMAGE_TAG
    labels:
      service: hyperledger-fabric
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_LOCALMSPID=TDC
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/tdc.teste.com.br/peers/peer0.tdc.teste.com.br/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/tdc.teste.com.br/users/Admin@tdc.teste.com.br/msp
      - CORE_PEER_ADDRESS=peer0.tdc.teste.com.br:7051
      #- FABRIC_LOGGING_SPEC=DEBUG
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
        - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
    depends_on:
      - peer0.tdc.teste.com.br
    networks:
      - teste
